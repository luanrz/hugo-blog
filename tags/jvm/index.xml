<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>JVM on luanrz's blog</title><link>https://blog.luanrz.cn/tags/jvm/</link><description>Recent content in JVM on luanrz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 24 Jun 2022 08:50:02 +0000</lastBuildDate><atom:link href="https://blog.luanrz.cn/tags/jvm/index.xml" rel="self" type="application/rss+xml"/><item><title>Java内存模型简介</title><link>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E7%AE%80%E4%BB%8B/</link><pubDate>Fri, 24 Jun 2022 08:50:02 +0000</pubDate><guid>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E7%AE%80%E4%BB%8B/</guid><description>&lt;p>Java内存模型（Java Memory Model，JMM）是Java多线程读写共享内存中的一种规范，该规范支持了&lt;code>synchronized&lt;/code>、&lt;code>volatile&lt;/code>、&lt;code>final&lt;/code>、&lt;code>Lock&lt;/code>等Java并发工具。&lt;/p>
&lt;p>前面介绍了JVM内存区域，JVM内存区域和Java内存模型是不同层次对内存的划分，Java内存模型侧重描述内存数据在多线程下的读写规则，一般关注&lt;strong>并发&lt;/strong>编程下线程如何正确读写共享数据。&lt;/p></description></item><item><title>JVM内存区域简介</title><link>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E7%AE%80%E4%BB%8B/</link><pubDate>Thu, 23 Jun 2022 11:24:43 +0000</pubDate><guid>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E7%AE%80%E4%BB%8B/</guid><description>&lt;p>JVM内存区域（JVM内存结构，JVM内存布局）是Java虚拟机运行时数据的位置划分，其主要包括：程序计数器、虚拟机栈、本地方法栈、堆、方法区。&lt;/p>
&lt;p>后面将介绍Java内存模型，JVM内存区域和Java内存模型是不同层次对内存的划分，JVM内存区域侧重描述内存数据的结构布局，一般关注&lt;strong>垃圾回收&lt;/strong>（GC）及&lt;strong>OOM&lt;/strong>问题。&lt;/p></description></item><item><title>JVM双亲委派模型浅析</title><link>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B%E6%B5%85%E6%9E%90/</link><pubDate>Thu, 16 Jun 2022 08:51:45 +0000</pubDate><guid>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B%E6%B5%85%E6%9E%90/</guid><description>&lt;p>&lt;strong>双亲委派&lt;/strong>(Parents Delegation)，一言以蔽之，就是：在Java虚拟机中，将类的加载行为&lt;strong>委派&lt;/strong>给父级(&lt;strong>双亲&lt;/strong>)类加载器的过程。&lt;/p>
&lt;p>接下来将逐一介绍Java8及Java9中的类加载器，并根据类加载器的组织结构，描述双亲委派的实现过程。&lt;/p></description></item><item><title>JVM性能调优工具汇总</title><link>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/</link><pubDate>Fri, 31 Dec 2021 10:25:57 +0000</pubDate><guid>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/</guid><description>一、命令行工具 序号 名称 功能 1 jps 虚拟机进程状况工具，主要用于查找vmid，是后续命令的基础 2 jstat 虚拟机统计信息监视工具，查找虚拟机进程中类加载、内存、GC等信息 3 jinfo Java配置信息工具，实时查看和调整虚拟机各项参数 4 jmap Java内存映像工具，生成堆转储快照（headump、dump），与jhat配合使用 5 jhat 虚拟机堆转储快照分析工具，分析jmap生成的堆转储快照文件，与jmap配合使用 6 jstack Java堆栈跟踪工具，生成虚拟机当前时刻的线程快照（threaddump、javacore） 7 jcmd Java命令行工具集，整合了上述众多命令 8 clhsdb HotSpot命令行调试器，也整合了上述众多命令，它在JDK9时被纳入了jhsdb 二、可视化工具 序号 名称 功能 1 JHSDB 基于服务性代理的调试工具，JDK内置（从JDK9开始提供） 2 JConsole Java监视与管理控制台，JDK内置 3 VisualVM 多合一故障处理工具，需要单独下载 4 JMC 可持续在线的监控工具，需要单独下载 参考文档
《深入理解Java虚拟机第3版 周志明 著》</description></item><item><title>OpenJDK8u构建指南</title><link>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/openjdk8u%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/</link><pubDate>Mon, 20 Jan 2020 17:42:00 +0000</pubDate><guid>https://blog.luanrz.cn/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/openjdk8u%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/</guid><description>官方OpenJdk8u构建指南个人翻译版本。官方地址为README-builds.html
介绍 这个README文件包含了OpenJDK的构建说明。构建OpenJDK的源码需要一定的专业技术知识。
!!!!!!!!!!!!!!! 这是对这份文档的一次重大改写!!!!!!!!!!!!!!!
概述如下：
当前构建方式是“configure &amp;amp;&amp;amp; make” GNU make的版本应当大于或等于3.81 构建是可伸缩的，比如：可以使用更多的处理器来完成构建过程，以减少构建时间 嵌套与递归的make调用已经明显减少，fork/exec 与子进程生成的总量也相应减少 不再支持 Windows MKS Windows Vistual Studio 的 vsvars*.bat 和 vcvars*.bat 等文件会自动运行 构建OpenJDK时，不再使用Ant 不再支持在配置构建过程时使用 ALT_* 环境变量 目录 介绍
使用Mercurial
获取源码 仓库结构 源码规范 构建
系统设置 Linux Solaris MacOSX Windows Configure Make 测试
附录A：提示和技巧
常见问题解答 构建性能技巧 故障排查 附录B：GNU-Make信息
附录C：构建环境
使用Mercurial OpenJDK源码由版本控制系统 Mercurial 维护，如果你还不熟悉 Mercurial ，请参阅 Beginner Guides 或参考 Mercurial Book 。本书的前几章对“Mercurial是什么“以及“Mercurial如何工作”进行了出色的概述。
获取源码 执行主仓库下的 `get_source.sh 命令，获取 OpenJDK Mercurial 仓库的全部内容。
hg clone http://hg.</description></item></channel></rss>